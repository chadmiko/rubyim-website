#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

compile '/css/*/' do

  ext = item[:extension].nil? ? nil : item[:extension].split('.').last

  if ext == 'erb'
    fiter :erb
  end

  filter :yui_compressor, type: 'css'
end

compile '/static/*/' do
end

compile '/events/*/' do
  ext = item[:extension].nil? ? nil : item[:extension].split('.').last

  if ext == 'md' || ext == 'markdown'
    filter :erb
    filter :rdiscount
  elsif ext == 'erb'
    filter :erb
  end

  layout 'event'
  layout 'default'
end

compile '/news/*/' do
  ext = item[:extension].nil? ? nil : item[:extension].split('.').last

  if ext == 'md' || ext == 'markdown' 
    filter :erb
    filter :rdiscount
  else
    filter :erb
  end

  layout 'article'
  layout 'default'
end

compile '/carriers/*/' do
  layout 'carrier'
  layout 'default'
end

ignore '/assets/style/_*/'

compile '*' do
  ext = item[:extension].nil? ? nil : item[:extension].split('.').last

  if item.binary?
    # don’t filter binary items
  elsif ext == 'md' || ext == 'markdown'
    filter :erb
    filter :rdiscount
    layout 'default'
  else
    filter :erb
    layout 'default'
  end
end

route '/static/*/' do
  # static/foo.html -> /foo.html
  item.identifier[7..-2]
end

route '/css/*/' do
  item.identifier.chop + '.css'
end

route '/carriers/*/' do
  item.identifier.chop + '.html'
end

route '/news/*/' do
  item.identifier.chop + '.html'
end

route '/events/*/' do
  item.identifier.chop + '.html'
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    if item.identifier == '/404/'
      # special case
      item.identifier.chop + '.html'
    else
      # Write item with identifier /foo/ to /foo/index.html
      item.identifier + 'index.html'
    end
  end
end

layout '*', :erb
